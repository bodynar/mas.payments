doctype html
.mb-2
    button.btn.btn-sm.btn-outline-primary(
        type='button',
        (click)='onBackClick()'
    ) Back
hr

form.needs-validation(
    #addMeasurementForm='ngForm',
    [class.was-validated]='!!(whenSubmittedForm$ | async)',
    (submit)='onFormSubmit(addMeasurementForm)'
)
    .form-group
        app-month-selector(
            startYear='2009',
            canClear='false',
            [preSelectedValue]='dateInitialValue',
            (selectionChange)="onDateChange($event)"
        )
    .form-group.form-row.measurement__heading(
        *ngIf='addMeasurementRequest.measurements.length > 0'
    )
        .col-2.form-group.mb-0
            label Measurement value
        .col-2.form-group.mb-0
            label Measurement type
        .col-2.form-group.mb-0
            label Comment
    .form-group.form-row.measurement__row(
        *ngFor='let measurement of addMeasurementRequest.measurements'
    )
        .col-2.form-group.mb-0
            input.form-control.form-control-sm#measurement(
                type='number',
                placeholder='Enter measurement',
                name='measurement',
                [(ngModel)]='measurement.measurement',
                #measurement='ngModel',
                required='required',
                min='0',
                appIsPositiveNumber,
            )
        .col-2.form-group.mb-0
            select.custom-select.custom-select-sm#meterMeasurementTypeId(
                required='required',
                name='meterMeasurementTypeId',
                [(ngModel)]='measurement.meterMeasurementTypeId'
            )
                option(
                    *ngFor='let measurementType of (measurementTypes$ | async)',
                    [value]='measurementType.id'
                ) {{ measurementType.name }}
        .col-2.form-group.mb-0
            textarea.form-control.form-control-sm#comment(
                type='text',
                placeholder='Enter comment',
                name='comment',
                [(ngModel)]='measurement.comment',
                #name='ngModel'
            ) 
        .col-1
            app-action-icon(
                icon='trash',
                [color]='actionColors[1]',
                (click)='onMeasurementRemove(measurement.id)'
            )
    .form-group.form-row.measurement__heading
        app-action-icon(
            icon='plus',
            [color]='actionColors[0]',
            (click)='onMeasurementAdd()'
        )
    button.btn.btn-sm.btn-success(
        *ngIf='!isLoading && addMeasurementRequest.measurements.length > 0',
        type='submit'
    ) Add
    button.btn.btn-sm.btn-success(
        *ngIf='isLoading',
        type='button'
    )
        span.spinner-grow.spinner-grow-sm.mr-1(
            role='status',
            aria-hidden='true'
        )
        span.sr-only Loading
        | Adding..