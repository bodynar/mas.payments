doctype html

.card.m-card(
        *ngIf='showAsGroups | async',
        [class.m-card--collapsed]='(isGroupCollapsed$ | async)'
    )
    .card-header(
        (click)='toggleState()'
    ) 
        span.oi.oi-chevron-bottom
        | {{ formattedGroupName }}
    .card-body
        .measurement-header(
            [class.measurement-header--flagged]='(isSentFlagActive$ | async)'
        )
            .measurement-header__flag.measurement-header--clickable(
                *ngIf='(isSentFlagActive$ | async)'
            )
                span.oi.oi-chevron-bottom(
                    *ngIf='(currentSortColumn$ | async) === "sent"',
                    [class.oi--rotated]='isDescSortOrder$ | async',
                    (click)='onSortColumn("sent")'
                )
                span(
                    (click)='onSortColumn("sent")'
                ) Sent
            .measurement-header__type.measurement-header--clickable
                span.oi.oi-chevron-bottom(
                    *ngIf='(currentSortColumn$ | async) === "type"',
                    [class.oi--rotated]='isDescSortOrder$ | async',
                    (click)='onSortColumn("type")'
                )
                span(
                    (click)='onSortColumn("type")'
                ) Type
            .measurement-header__value.measurement-header--clickable
                span.oi.oi-chevron-bottom(
                    *ngIf='(currentSortColumn$ | async) === "value"',
                    [class.oi--rotated]='isDescSortOrder$ | async',
                    (click)='onSortColumn("value")'
                )
                span(
                    (click)='onSortColumn("value")'
                ) Value
            .measurement-header__comment
                span Comment
            .measurement-header__actions
                span Actions
        app-measurement-item(
            *ngFor='let measurement of (measurements$ | async)',
            [isGroupedItem]='true',
            [measurement]='measurement',
            [isSentFlagActive]='isSentFlagActive$',
            [onDeleteClick]='onDeleteClick$',
            [onEditClick]='onEditClick$',
            [onTypeClick]='onTypeClick$',
            [onSendFlagClick]='onSendFlagClick$',
        )
div(
    *ngIf='!(showAsGroups | async)',
)
    app-measurement-item(
        *ngFor='let measurement of (measurements$ | async)',
        [isGroupedItem]='false',
        [measurement]='measurement',
        [isSentFlagActive]='isSentFlagActive$',
        [onDeleteClick]='onDeleteClick$',
        [onEditClick]='onEditClick$',
        [onTypeClick]='onTypeClick$',
        [onSendFlagClick]='onSendFlagClick$',
    )